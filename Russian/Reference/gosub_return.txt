@Title Gosub : Return

@Syntax

  @Keyword Gosub MyLabel 
     
  MyLabel: 
    ...
  @Keyword Return
 
 
@Description

  Команда @Keyword Gosub буквально означает 'Иди в подпрограмму' и используется для вызова подпрограммы MyLabel.
  После @Keyword Gosub должна быть указана @ReferenceLink "general_rules" "метка" подпрограммы,
  программа продолжит выполнение с позиции, заданной этой меткой, и будет делать это пока не встретит @Keyword Return.
  После выполнения команды @Keyword Return, программа вернется к строке, следующей за командой @Keyword Gosub.
  @LineBreak
  Команда @Keyword Gosub полезна для создания быстрого структурированного кода.
  @LineBreak
  @LineBreak
  Другой приём, с помощью которого можно вставить подпрограмму в самостоятельный компонент программы,
  это @ReferenceLink "procedures" "процедуры".
  @Keyword Gosub можно использовать только внутри основного кода, но нельзя использовать внутри
  @ReferenceLink "procedures" "процедур".

  @Example

@Code       
  a = 1
  b = 2
  Gosub ComplexOperation 
  Debug a 
  End 
       
  ComplexOperation: 
    a = b*2+a*3+(a+b) 
    a = a+a*a 
  Return 
@EndCode

@Syntax

  @Keyword FakeReturn 

@Description

  Если Вы хотите совершить прыжок (@ReferenceLink "Others" Goto) из подпрограммы в другую часть кода (вне подпрограммы)
  - следует использовать @Keyword FakeReturn для имитации выхода из подпрограммы.
  @Keyword FakeReturn имитирует @Keyword Return без выполнения возврата, и если его не использовать, программа даст сбой. @LineBreak
  Примечание 1: Чтобы безопасно завершить цикл, вместо @ReferenceLink "Others" Goto следует использовать @ReferenceLink "break_continue" "Break". @LineBreak
  Примечание 2: Не рекомендуется использовать эту команду, потому что хорошо созданная программа не использует @ReferenceLink "Others" Goto.
  Но иногда, по причине быстродействия, это может помочь программисту.

  @Example
  
@Code     
  Gosub SubRoutine1
     
  SubRoutine1:
    ...
    If a = 10
      FakeReturn 
      Goto Main_Loop 
    Endif 
  Return
@EndCode
