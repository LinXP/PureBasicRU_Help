;
;     Desktop library documentation
;
;       (c) Fantaisie Software
;

@Library Desktop

@Overview

  The desktop library allows access to information about the user's desktop environment,
  such as screen width, height, depth, mouse position etc.

@CommandList

@ExampleFile All Desktop.pb

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = ExamineDesktops()

@Description
  Retrieves information about all the desktops connected to the local computer. This function must be called
  before using the functions of this library the following functions: @@DesktopDepth,
  @@DesktopFrequency, @@DesktopHeight,
  @@DesktopName and @@DesktopWidth.

@NoParameters

@ReturnValue
  The number of desktops on success, zero otherwise.

@Remarks
  Typically, a standard user has only one desktop, but multi-screen users may have several desktops, each with their own resolution.

@Example
@Code
  MessageRequester("Desktop Information", "You have "+Str(ExamineDesktops())+" desktops")
@EndCode

@SeeAlso
  @@DesktopDepth, @@DesktopFrequency,
  @@DesktopHeight, @@DesktopName, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopDepth(#Desktop)

@Description
  Returns the color depth of the specified desktop.

@Parameter "#Desktop"
  The index of the desktop. The first index always specifies the primary monitor.
  The first index value is zero.

@ReturnValue
  Returns the depth in bits-per-pixel: 1, 2, 4, 8, 15, 16, 24 or 32-bit

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@Example
@Code
  ExamineDesktops()
  MessageRequester("Display Information", "Current resolution = "+Str(DesktopWidth(0))+"x"+Str(DesktopHeight(0))+"x"+Str(DesktopDepth(0)))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopFrequency,
  @@DesktopHeight, @@DesktopName, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopFrequency(#Desktop)

@Description
  Returns the frequency of the specified desktop. 

@Parameter "#Desktop"
  The index of the desktop. The first index always specifies the primary monitor.
  The first index value is zero.

@ReturnValue
  Returns the frequency of the specified desktop in Hertz. 
  If the return-value is 0 then the default hardware frequency is being used, or the actual frequency could not be determined.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.
  @Bold "Note:" on Linux, this function always returns 0.

@Example
@Code
  ExamineDesktops()
  f = DesktopFrequency(0)
  If f = 0
    MessageRequester("Display Information", "There isn't set any desktop frequency, the standard hardware frequency is used.")
  Else
    MessageRequester("Display Information", "Frequency of desktop: "+Str(f)+" Hz.")
  EndIf
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth,
  @@DesktopHeight, @@DesktopName, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopHeight(#Desktop)

@Description
  Returns the height of the specified desktop. 

@Parameter "#Desktop"
  The index of the desktop. The first index always specifies the primary monitor.
  The first index value is zero.

@ReturnValue
  Returns the height in pixels.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@Example
@Code
  ExamineDesktops()
  MessageRequester("Display Information", "Current resolution = "+Str(DesktopWidth(0))+"x"+Str(DesktopHeight(0))+"x"+Str(DesktopDepth(0)))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopX, @@DesktopY, 
  @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopX(#Desktop)

@Description
  Returns the x coordinate of the specified desktop.

@Parameter "#Desktop"
  The index of the desktop. The first index always specifies the primary monitor.
  The first index value is zero.

@ReturnValue
  Returns the x coordinate (in pixel) of the top left corner of the desktop. The coordinate is relative to the top left corner of the primary
  monitor. It is negative if the specified monitor is to the left of the primary monitor.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopY, 
  @@DesktopHeight, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopY(#Desktop)

@Description
  Returns the y coordinate of the specified desktop.

@Parameter "#Desktop"
  The index of the desktop. The first index always specifies the primary monitor.
  The first index value is zero.

@ReturnValue
  Returns the y coordinate (in pixel) of the top left corner of the desktop. The coordinate is relative to the top left corner of the primary
  monitor. It is negative if the specified monitor is above the primary monitor.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopX, 
  @@DesktopHeight, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopMouseX()

@Description
  Returns the absolute x position of the mouse on the desktop.

@NoParameters

@ReturnValue
  Returns the x coordinate (in pixel) of the mouse relative to the top left corner of the primary monitor.
  The coordinate is negative if the mouse is on a monitor to the left of the primary monitor.

@Example
@Code
  If OpenWindow(0, 0, 0, 300, 30, "Desktop mouse monitor", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget(0, 10, 6, 200, 20, "")

    Repeat
      Event = WindowEvent()

      If Event = 0 ; No events are in queue anymore, so halt the process for a few milliseconds for multitasking
        SetGadgetText(0, "Desktop mouse position: "+Str(DesktopMouseX())+","+Str(DesktopMouseY()))
        Delay(20)
      EndIf

    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@DesktopMouseY, @@DesktopX, @@DesktopWidth, @@WindowMouseX

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopMouseY()

@Description
  Returns the absolute y position of the mouse on the desktop.

@NoParameters

@ReturnValue
  Returns the y coordinate (in pixel) of the mouse relative to the top left corner of the primary monitor.
  The coordinate is negative if the mouse is on a monitor above the primary monitor.

@Example
@Code
  If OpenWindow(0, 0, 0, 300, 30, "Desktop mouse monitor", #PB_Window_SystemMenu | #PB_Window_ScreenCentered)
    TextGadget(0, 10, 6, 200, 20, "")

    Repeat
      Event = WindowEvent()

      If Event = 0 ; No events are in queue anymore, so halt the process for a few milliseconds for multitasking
        SetGadgetText(0, "Desktop mouse position: "+Str(DesktopMouseX())+","+Str(DesktopMouseY()))
        Delay(20)
      EndIf

    Until Event = #PB_Event_CloseWindow
  EndIf
@EndCode

@SeeAlso
  @@DesktopMouseX, @@DesktopY, @@DesktopHeight, @@WindowMouseY

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result$ = DesktopName(#Desktop)

@Description
  Returns the name (if any) for the specified desktop. 

@Parameter "#Desktop"
  The index of the desktop. The first index always specifies the primary monitor.
  The first index value is zero.

@ReturnValue
  Returns a string with the desktop name. If there is no name then an empty string is returned.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@Example
@Code
  ExamineDesktops()
  MessageRequester("Display Information", "Primary desktop name = "+DesktopName(0))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopFrequency,
  @@DesktopHeight, @@DesktopWidth

@SupportedOS

;--------------------------------------------------------------------------------------------------------

@Function Result = DesktopWidth(#Desktop)

@Description
  Returns the width for the specified desktop. 

@Parameter "#Desktop"
  The index of the desktop. The first index always specifies the primary monitor.
  The first index value is zero.

@ReturnValue
  Returns the width in pixels.

@Remarks
  @@ExamineDesktops must be called before using this function to retrieve information about the available desktops.

@Example
@Code
  ExamineDesktops()
  MessageRequester("Display Information", "Current resolution = "+Str(DesktopWidth(0))+"x"+Str(DesktopHeight(0))+"x"+Str(DesktopDepth(0)))
@EndCode

@SeeAlso
  @@ExamineDesktops,
  @@DesktopDepth, @@DesktopX, @@DesktopY, 
  @@DesktopHeight

@SupportedOS

;--------------------------------------------------------------------------------------------------------
